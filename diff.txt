diff --git a/relm4-ui/src/main.rs b/relm4-ui/src/main.rs
index 1a06e65..4dad9ad 100644
--- a/relm4-ui/src/main.rs
+++ b/relm4-ui/src/main.rs
@@ -24,7 +24,8 @@ use list_item::ListItem;
 use release::{ReleaseInitModel, ReleaseModel, ReleaseMsg, ReleaseOutputMsg};
 use releases::{ReleasesInit, ReleasesModel, ReleasesMsg, ReleasesOutputMsg};
 use relm4::{
-    Component, ComponentController, ComponentParts, ComponentSender, Controller, RelmApp,
+    Component, ComponentController, ComponentParts, ComponentSender, Controller, MessageBroker,
+    RelmApp,
     gtk::{self, glib::clone, prelude::*},
     once_cell::sync::OnceCell,
     typed_view::list::TypedListView,
@@ -33,7 +34,11 @@ use service::{
     view_model_service::ViewModelService,
     view_models::{Settings, SoftwareTitleListModel},
 };
-use software_title_list::{SoftwareTitleList, SoftwareTitleListInit, SoftwareTitleListOutputMsg};
+use software_title_list::{
+    SoftwareTitleList, SoftwareTitleListInit, SoftwareTitleListMsg, SoftwareTitleListOutputMsg,
+};
+
+pub static SOFTWARE_TITLE_LIST_BROKER: MessageBroker<SoftwareTitleListMsg> = MessageBroker::new();
 
 #[derive(Debug)]
 struct InitResult {
@@ -46,8 +51,6 @@ struct InitResult {
 enum AppMsg {
     Initialize,
     SoftwareTitleSelected { id: i64 },
-    SoftwareTitleCreated(SoftwareTitleListModel),
-    SoftwareTitleUpdated(SoftwareTitleListModel),
     ReleaseSelected { id: i64 },
 }
 
@@ -139,10 +142,6 @@ impl Component for AppModel {
                     let repository_manager = Arc::new(RepositoryManager::new(pool));
                     let view_model_service =
                         Arc::new(ViewModelService::new(Arc::clone(&repository_manager)));
-                    /*let software_titles = view_model_service
-                    .get_software_title_list_models()
-                    .await
-                    .expect("Fetching software titles failed");*/
                     let settings = view_model_service
                         .get_settings()
                         .await
@@ -151,7 +150,6 @@ impl Component for AppModel {
                     CommandMsg::InitializationDone(InitResult {
                         repository_manager,
                         view_model_service,
-                        //software_titles,
                         settings,
                     })
                 });
@@ -167,16 +165,6 @@ impl Component for AppModel {
                     .sender()
                     .emit(ReleaseMsg::Clear);
             }
-            AppMsg::SoftwareTitleCreated(software_title_list_model) => {
-                // TODO: notify software title list of new software title
-                /*self.list_view_wrapper.append(ListItem {
-                    id: software_title_list_model.id,
-                    name: software_title_list_model.name.clone(),
-                });*/
-            }
-            AppMsg::SoftwareTitleUpdated(_software_title_list_model) => {
-                // TODO: notify software title list of updated software title
-            }
             AppMsg::ReleaseSelected { id } => {
                 self.release
                     .get()
@@ -198,9 +186,12 @@ impl Component for AppModel {
                 let repository_manager = Arc::clone(&init_result.repository_manager);
 
                 let software_title_list = SoftwareTitleList::builder()
-                    .launch(SoftwareTitleListInit {
-                        view_model_service: Arc::clone(&view_model_service),
-                    })
+                    .launch_with_broker(
+                        SoftwareTitleListInit {
+                            view_model_service: Arc::clone(&view_model_service),
+                        },
+                        &SOFTWARE_TITLE_LIST_BROKER,
+                    )
                     .forward(sender.input_sender(), |msg| match msg {
                         SoftwareTitleListOutputMsg::SoftwareTitleSelected { id } => {
                             AppMsg::SoftwareTitleSelected { id }
@@ -225,12 +216,6 @@ impl Component for AppModel {
                 let releases = ReleasesModel::builder().launch(releases_init).forward(
                     sender.input_sender(),
                     |msg| match msg {
-                        ReleasesOutputMsg::SoftwareTitleCreated {
-                            software_title_list_model,
-                        } => AppMsg::SoftwareTitleCreated(software_title_list_model),
-                        ReleasesOutputMsg::SoftwareTitleUpdated {
-                            software_title_list_model,
-                        } => AppMsg::SoftwareTitleUpdated(software_title_list_model),
                         ReleasesOutputMsg::ReleaseSelected { id } => AppMsg::ReleaseSelected { id },
                     },
                 );
@@ -241,14 +226,9 @@ impl Component for AppModel {
                     repository_manager: Arc::clone(&init_result.repository_manager),
                     settings: Arc::clone(&init_result.settings),
                 };
-                let release_model = ReleaseModel::builder().launch(release_init_model).forward(
-                    sender.input_sender(),
-                    |msg| match msg {
-                        ReleaseOutputMsg::SoftwareTitleCreated(software_title_list_model) => {
-                            AppMsg::SoftwareTitleCreated(software_title_list_model)
-                        }
-                    },
-                );
+                let release_model = ReleaseModel::builder()
+                    .launch(release_init_model)
+                    .forward(sender.input_sender(), |msg| match msg {});
                 self.release_view.append(release_model.widget());
 
                 self.view_model_service
diff --git a/relm4-ui/src/release.rs b/relm4-ui/src/release.rs
index e931c02..9212a4c 100644
--- a/relm4-ui/src/release.rs
+++ b/relm4-ui/src/release.rs
@@ -23,7 +23,6 @@ use crate::{
     document_file_set_viewer::{DocumentViewer, DocumentViewerInit},
     emulator_runner::{EmulatorRunnerInit, EmulatorRunnerModel},
     image_fileset_viewer::{ImageFileSetViewerInit, ImageFilesetViewer},
-    image_viewer::{ImageViewer, ImageViewerInit, ImageViewerMsg},
     list_item::ListItem,
     release_form::{ReleaseFormInit, ReleaseFormModel, ReleaseFormOutputMsg},
     tabbed_image_viewer::{TabbedImageViewer, TabbedImageViewerInit, TabbedImageViewerMsg},
@@ -61,36 +60,18 @@ pub struct ReleaseInitModel {
 
 #[derive(Debug)]
 pub enum ReleaseMsg {
-    ReleaseSelected {
-        id: i64,
-    },
-    FetchRelease {
-        id: i64,
-    },
+    ReleaseSelected { id: i64 },
+    FetchRelease { id: i64 },
     StartEmulatorRunner,
     StartImageFileSetViewer,
     StartDocumentFileSetViewer,
     StartEditRelease,
     UpdateRelease(ReleaseListModel),
     Clear,
-    FileSetSelected {
-        index: u32,
-    },
-    ImageFileSetSelected {
-        index: u32,
-    },
-    DocumentFileSetSelected {
-        index: u32,
-    },
-    ReleaseCreatedOrUpdated {
-        id: i64,
-    },
-    SoftwareTitleCreated {
-        software_title_list_model: SoftwareTitleListModel,
-    },
-    SoftwareTitleUpdated {
-        software_title_list_model: SoftwareTitleListModel,
-    },
+    FileSetSelected { index: u32 },
+    ImageFileSetSelected { index: u32 },
+    DocumentFileSetSelected { index: u32 },
+    ReleaseCreatedOrUpdated { id: i64 },
 }
 
 #[derive(Debug)]
@@ -99,9 +80,7 @@ pub enum ReleaseCommandMsg {
 }
 
 #[derive(Debug)]
-pub enum ReleaseOutputMsg {
-    SoftwareTitleCreated(SoftwareTitleListModel),
-}
+pub enum ReleaseOutputMsg {}
 
 #[relm4::component(pub)]
 impl Component for ReleaseModel {
@@ -385,22 +364,6 @@ impl Component for ReleaseModel {
                             ReleaseFormOutputMsg::ReleaseCreatedOrUpdated { id } => {
                                 ReleaseMsg::FetchRelease { id }
                             }
-                            ReleaseFormOutputMsg::SoftwareTitleCreated(
-                                software_title_list_model,
-                            ) => {
-                                println!("Software title created: {:?}", software_title_list_model);
-                                ReleaseMsg::SoftwareTitleCreated {
-                                    software_title_list_model,
-                                }
-                            }
-                            ReleaseFormOutputMsg::SoftwareTitleUpdated(
-                                software_title_list_model,
-                            ) => {
-                                println!("Software title updated: {:?}", software_title_list_model);
-                                ReleaseMsg::SoftwareTitleUpdated {
-                                    software_title_list_model,
-                                }
-                            }
                         });
 
                     self.form_window = Some(form_window);
@@ -484,17 +447,6 @@ impl Component for ReleaseModel {
                 println!("Release created or updated with ID: {}", id);
                 sender.input(ReleaseMsg::FetchRelease { id });
             }
-            ReleaseMsg::SoftwareTitleCreated {
-                software_title_list_model,
-            } => {
-                let res = sender.output(ReleaseOutputMsg::SoftwareTitleCreated(
-                    software_title_list_model,
-                ));
-                if let Err(err) = res {
-                    eprintln!("Error sending SoftwareTitleCreated output: {:?}", err);
-                }
-            }
-
             _ => (),
         }
     }
diff --git a/relm4-ui/src/release_form.rs b/relm4-ui/src/release_form.rs
index c7e9579..0dd60da 100644
--- a/relm4-ui/src/release_form.rs
+++ b/relm4-ui/src/release_form.rs
@@ -34,8 +34,6 @@ pub enum ReleaseFormMsg {
     SoftwareTitleSelected(SoftwareTitleListModel),
     StartSaveRelease,
     OpenSoftwareTitleSelector,
-    SoftwareTitleCreated(SoftwareTitleListModel),
-    SoftwareTitleUpdated(SoftwareTitleListModel),
     RemoveSoftwareTitle,
     RemoveSystem,
     RemoveFileSet,
@@ -44,8 +42,6 @@ pub enum ReleaseFormMsg {
 #[derive(Debug)]
 pub enum ReleaseFormOutputMsg {
     ReleaseCreatedOrUpdated { id: i64 },
-    SoftwareTitleCreated(SoftwareTitleListModel),
-    SoftwareTitleUpdated(SoftwareTitleListModel),
 }
 
 #[derive(Debug)]
@@ -336,12 +332,6 @@ impl Component for ReleaseFormModel {
                         SoftwareTitleSelectOutputMsg::Selected(software_title) => {
                             ReleaseFormMsg::SoftwareTitleSelected(software_title)
                         }
-                        SoftwareTitleSelectOutputMsg::Created(software_title) => {
-                            ReleaseFormMsg::SoftwareTitleCreated(software_title)
-                        }
-                        SoftwareTitleSelectOutputMsg::Updated(software_title) => {
-                            ReleaseFormMsg::SoftwareTitleUpdated(software_title)
-                        }
                     });
                 self.software_title_selector = Some(software_title_selector);
                 self.software_title_selector
@@ -423,20 +413,6 @@ impl Component for ReleaseFormModel {
                     });
                 }
             }
-            ReleaseFormMsg::SoftwareTitleCreated(software_title) => {
-                println!("Software title created: {:?}", &software_title);
-                let res = sender.output(ReleaseFormOutputMsg::SoftwareTitleCreated(software_title));
-                if let Err(msg) = res {
-                    eprintln!("Error in sending message {:?}", msg);
-                }
-            }
-            ReleaseFormMsg::SoftwareTitleUpdated(software_title) => {
-                println!("Software title updated: {:?}", &software_title);
-                let res = sender.output(ReleaseFormOutputMsg::SoftwareTitleUpdated(software_title));
-                if let Err(msg) = res {
-                    eprintln!("Error in sending message {:?}", msg);
-                }
-            }
             ReleaseFormMsg::RemoveSoftwareTitle => {
                 remove_selected(&mut self.selected_software_titles_list_view_wrapper);
             }
diff --git a/relm4-ui/src/releases.rs b/relm4-ui/src/releases.rs
index 55ce418..e3ffc9d 100644
--- a/relm4-ui/src/releases.rs
+++ b/relm4-ui/src/releases.rs
@@ -9,7 +9,7 @@ use relm4::{
 use service::{
     error::Error,
     view_model_service::{ReleaseFilter, ViewModelService},
-    view_models::{ReleaseListModel, Settings, SoftwareTitleListModel},
+    view_models::{ReleaseListModel, Settings},
 };
 
 use crate::{
@@ -25,8 +25,6 @@ pub enum ReleasesMsg {
     AddRelease(ReleaseListModel),
     FetchReleases,
     ReleaseCreatedOrUpdated { id: i64 },
-    SofwareTitleCreated(SoftwareTitleListModel),
-    SofwareTitleUpdated(SoftwareTitleListModel),
 }
 
 #[derive(Debug)]
@@ -52,15 +50,7 @@ pub struct ReleasesInit {
 
 #[derive(Debug)]
 pub enum ReleasesOutputMsg {
-    SoftwareTitleCreated {
-        software_title_list_model: SoftwareTitleListModel,
-    },
-    SoftwareTitleUpdated {
-        software_title_list_model: SoftwareTitleListModel,
-    },
-    ReleaseSelected {
-        id: i64,
-    },
+    ReleaseSelected { id: i64 },
 }
 
 #[relm4::component(pub)]
@@ -184,14 +174,6 @@ impl Component for ReleasesModel {
                             println!("Release created or updated with ID: {}", id);
                             ReleasesMsg::ReleaseCreatedOrUpdated { id }
                         }
-                        ReleaseFormOutputMsg::SoftwareTitleCreated(software_title_list_model) => {
-                            println!("Software title created: {:?}", software_title_list_model);
-                            ReleasesMsg::SofwareTitleCreated(software_title_list_model)
-                        }
-                        ReleaseFormOutputMsg::SoftwareTitleUpdated(software_title_list_model) => {
-                            println!("Software title updated: {:?}", software_title_list_model);
-                            ReleasesMsg::SofwareTitleUpdated(software_title_list_model)
-                        }
                     });
 
                 self.form_window = Some(form_window);
@@ -214,22 +196,6 @@ impl Component for ReleasesModel {
                 // TODO fetch only the created of rupdated release
                 sender.input(ReleasesMsg::FetchReleases);
             }
-            ReleasesMsg::SofwareTitleCreated(software_title_list_model) => {
-                let res = sender.output(ReleasesOutputMsg::SoftwareTitleCreated {
-                    software_title_list_model,
-                });
-                if let Err(err) = res {
-                    eprintln!("Error sending SoftwareTitleCreated message: {:?}", err);
-                }
-            }
-            ReleasesMsg::SofwareTitleUpdated(software_title_list_model) => {
-                let res = sender.output(ReleasesOutputMsg::SoftwareTitleUpdated {
-                    software_title_list_model,
-                });
-                if let Err(err) = res {
-                    eprintln!("Error sending SoftwareTitleUpdated message: {:?}", err);
-                }
-            }
         }
     }
     fn update_cmd(
diff --git a/relm4-ui/src/software_title_form.rs b/relm4-ui/src/software_title_form.rs
index a7ef532..64b5065 100644
--- a/relm4-ui/src/software_title_form.rs
+++ b/relm4-ui/src/software_title_form.rs
@@ -15,6 +15,8 @@ use relm4::{
 };
 use service::view_models::SoftwareTitleListModel;
 
+use crate::{SOFTWARE_TITLE_LIST_BROKER, software_title_list::SoftwareTitleListMsg};
+
 #[derive(Debug)]
 pub struct SoftwareTitleFormModel {
     pub name: String,
@@ -145,6 +147,7 @@ impl Component for SoftwareTitleFormModel {
                         can_delete: false,
                     })
                 });
+                SOFTWARE_TITLE_LIST_BROKER.send(SoftwareTitleListMsg::FetchSoftwareTitles);
                 if let Err(e) = res {
                     eprintln!("Failed to send output message: {:?}", e);
                 }
diff --git a/relm4-ui/src/software_title_selector.rs b/relm4-ui/src/software_title_selector.rs
index 121e1ca..ac6bf9b 100644
--- a/relm4-ui/src/software_title_selector.rs
+++ b/relm4-ui/src/software_title_selector.rs
@@ -15,10 +15,12 @@ use service::{
 };
 
 use crate::{
+    SOFTWARE_TITLE_LIST_BROKER,
     list_item::ListItem,
     software_title_form::{
         SoftwareTitleFormInit, SoftwareTitleFormModel, SoftwareTitleFormOutputMsg,
     },
+    software_title_list::SoftwareTitleListMsg,
 };
 
 use ui_components::confirm_dialog::{ConfirmDialog, ConfirmDialogInit};
@@ -37,8 +39,6 @@ pub enum SoftwareTitleSelectMsg {
 #[derive(Debug)]
 pub enum SoftwareTitleSelectOutputMsg {
     Selected(SoftwareTitleListModel),
-    Created(SoftwareTitleListModel),
-    Updated(SoftwareTitleListModel),
 }
 
 #[derive(Debug)]
@@ -262,19 +262,9 @@ impl Component for SoftwareTitleSelectModel {
                     "Successfully added software_title: {}",
                     software_title_list_model.name
                 );
-                sender
-                    .output(SoftwareTitleSelectOutputMsg::Created(
-                        software_title_list_model,
-                    ))
-                    .expect("Failed to send software_title selection output");
                 sender.input(SoftwareTitleSelectMsg::FetchSoftwareTitles);
             }
             SoftwareTitleSelectMsg::SoftwareTitleUpdated(_software_title_list_model) => {
-                sender
-                    .output(SoftwareTitleSelectOutputMsg::Updated(
-                        _software_title_list_model,
-                    ))
-                    .expect("Failed to send software_title update output");
                 sender.input(SoftwareTitleSelectMsg::FetchSoftwareTitles);
             }
         }
@@ -288,7 +278,6 @@ impl Component for SoftwareTitleSelectModel {
     ) {
         match message {
             CommandMsg::SoftwareTitlesFetched(Ok(software_titles)) => {
-                // Handle the fetched software_titles, e.g., populate a dropdown or list
                 for software_title in &software_titles {
                     println!(
                         "Fetched software_title: {} with ID: {}",
@@ -314,6 +303,7 @@ impl Component for SoftwareTitleSelectModel {
             CommandMsg::Deleted(Ok(_id)) => {
                 println!("Successfully deleted software_title");
                 sender.input(SoftwareTitleSelectMsg::FetchSoftwareTitles);
+                SOFTWARE_TITLE_LIST_BROKER.send(SoftwareTitleListMsg::FetchSoftwareTitles);
             }
             CommandMsg::Deleted(Err(error)) => {
                 eprintln!("Error deleting software_title: {:?}", error);
